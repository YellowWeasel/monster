<resources>

    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <!--导航栏底色-->
        <item name="colorPrimary">@color/colorPrimary</item>
        <!--状态栏底色-->
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <!--导航栏上的标题颜色-->
        <item name="android:textColorPrimary">@color/app_base_layout_background</item>
        <!--Activity窗口的颜色-->
        <item name="android:windowBackground">@android:color/black</item>
        <!--按钮选中或者点击获得焦点后的颜色-->
        <item name="colorAccent">@color/colorAccent</item>
        <!--和 colorAccent相反，正常状态下按钮的颜色-->
        <item name="colorControlNormal">#ff0000</item>
        <!--Button按钮正常状态颜色-->
        <item name="colorButtonNormal">@color/ui_btn_background_orange</item>
        <!--EditText 输入框中字体的颜色-->
        <item name="editTextColor">@android:color/white</item>
        <!--Navigation icon颜色设置-->
        <item name="drawerArrowStyle">@style/AppTheme.MyDrawerArrowStyle</item>
        <!--popupMenu弹出菜单样式-->
        <item name="popupMenuStyle">@style/AppThemePopupMenu</item>
        <item name="textAppearanceSmallPopupMenu">@style/AppThemeTextAppearance</item>
        <item name="textAppearanceLargePopupMenu">@style/AppThemeTextAppearance</item>
    </style>

    <!-- 用于开启滑动返回功能的 Activity -->
    <style name="AppTheme.Transparent">
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowIsTranslucent">true</item>
    </style>

    <style name="WelcomeStyle" parent="android:Theme">
        <item name="android:windowBackground">@drawable/image_app_welcome_bg</item>
        <item name="android:windowNoTitle">true</item>
    </style>

    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar">
        <!--<item name="android:textColorPrimary">@color/app_base_text_title_1</item>-->
    </style>

    <!--<style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />-->

    <style name="AppTheme.PopupOverlay" parent="@style/ThemeOverlay.AppCompat.Dark">
        <item name="android:colorBackground">#000000</item>
        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle
        </item> <!--新增一个item，用于控制menu-->
    </style>

    <style name="OverflowMenuStyle" parent="Widget.AppCompat.Light.PopupMenu.Overflow">
        <item name="overlapAnchor">false</item>  <!--把该属性改为false即可使menu位置位于toolbar之下-->
    </style>

    <!--加入一個新的 navigation drarwer 的风格-->
    <style name="AppTheme.MyDrawerArrowStyle" parent="Widget.AppCompat.DrawerArrowToggle">
        <!--将 spinBars 属性设定为 false-->
        <item name="spinBars">false</item>
        <!--设定 drawer arrow 的颜色-->
        <item name="color">@android:color/white</item>
    </style>

    <style name="AppThemePopupMenu">
        <item name="android:popupBackground">#000000</item>
    </style>

    <style name="AppThemeTextAppearance">
        <item name="android:textColor">#ffffff</item>
        <item name="android:textSize">18sp</item>
    </style>


    <style name="LoadingDialog" parent="@android:style/Theme.Dialog">
        <!--Dialog的windowFrame框为无-->
        <item name="android:windowFrame">@null</item>
        <!--是否浮现在activity之上-->
        <item name="android:windowIsFloating">true</item>
        <!--是否半透明-->
        <item name="android:windowIsTranslucent">true</item>
        <!--是否显示title-->
        <item name="android:windowNoTitle">true</item>
        <!--设置dialog的背景-->
        <item name="android:background">@android:color/transparent</item>
        <!--显示区域背景是否透明-->
        <item name="android:windowBackground">@android:color/transparent</item>
        <!--就是用来控制灰度的值，当为1时，界面除了我们的dialog内容是高亮显示的，dialog以外的区域是黑色的，完全看不到其他内容，系统的默认值是0.5-->
        <item name="android:backgroundDimAmount">0.5</item>
        <!--显示区域以外是否使用黑色半透明背景-->
        <item name="android:backgroundDimEnabled">true</item>
    </style>

    <!--对话框-->
    <style name="ErayicDialogStyle" parent="@android:style/Theme.Dialog">
        <item name="android:windowFrame">@null</item>
        <!-- 边框 -->
        <item name="android:windowIsFloating">true</item>
        <!-- 是否浮现在activity之上 -->
        <item name="android:windowIsTranslucent">false</item>
        <!-- 半透明 -->
        <item name="android:windowNoTitle">true</item>
        <!-- 无标题 -->
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:windowContentOverlay">@null</item>
    </style>

    <!--SlideSwitch-->
    <declare-styleable name="SlideSwitch">
        <attr name="themeColor" format="color" />
        <attr name="isOpen" format="boolean" />
        <attr name="shape">
            <enum name="rect" value="1" />
            <enum name="circle" value="2" />
        </attr>
    </declare-styleable>

    <!--codbking日期选择器 start-->
    <color name="tram">#00000000</color>

    <style name="DialogAnimation">
        <item name="android:windowEnterAnimation">@anim/abc_slide_in_bottom</item>
        <item name="android:windowExitAnimation">@anim/abc_slide_out_bottom</item>
    </style>

    <style name="dialog_style" parent="android:Theme.Dialog">
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowBackground">@color/tram</item>
        <item name="android:windowAnimationStyle">@style/DialogAnimation</item>
    </style>
    <!--codbking日期选择器 end-->
</resources>
